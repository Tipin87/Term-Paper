import tweepy
from textblob import TextBlob
from wordcloud import WordCloud
from sklearn import svm #
import pandas as pd
import numpy as np
import re
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')


from google.colab import files
uploaded = files.upload()


log = pd.read_csv('Login.csv')

consumerKey = log['key'][0]
consumerSecret = log['key'][1]
accessToken = log['key'][2]
accessTokenSecret = log['key'][3]

authenticate = tweepy.OAuthHandler(consumerKey, consumerSecret)
authenticate.set_access_token(accessToken, accessTokenSecret)
api = tweepy.API(authenticate, wait_on_limit = True)


posts = api.user_timeline(screen_name = "Alibaba", count= 100, lang = "en", tweet_mode="extended")
print("Show the 5 recent tweets: \n")
for tweet in posts[0:5]:
  print(tweet.full_text + '\n')
  i = i + 1

df =pd.DataFrame([tweet.full_text for tweet in posts] , colums=['Tweets'])
df.head()


def cleanTxt(text):
  text = re.sub(r'@[A-Za-z0-9]+', "", text)
  text = re.sub(r'#', "", text)
  text = re.sub(r'RT[\s]+', "", text)
  text = re.sub(r'https?:\/\/\s+', "", text)
  df['Tweets']= df['Tweets'].apply(cleanTxt)
  df


def getSubjectivity(text):
  return TextBlob(text).sentiment.subjectivity
def getPolarity(text):
  return TextBlob(text).sentiment.polarity
df['Subjectivity'] = df['Tweets'].apply(getSubjectivity)
df['Polarity'] = df['Tweets'].apply(getPolarity)
df

def getAnalysis(score):
  if score < 0:
    return 'Negative'
  elif score == 0:
    return 'Neutral'
  else: 
    return 'Positive'
df['Analysis'] = df['Polarity'].apply(getAnalysis)
df

j=1
sortedDF = df.sort_values(by=['Polarity'])
for i in range(0, sortedDF.shape[0]):
  if(sortedDF['Analysis'][i] == 'Positive'):
    print(str(j) + ')' +sortedDF['Tweets'][i])
    print()
    j = j+1

j=1
sortedDF = df.sort_values(by=['Polarity'], ascending='False')
for i in range(0, sortedDF.shape[0]):
  if(sortedDF['Analysis'][i] == 'Negative'):
    print(str(j) + ')' +sortedDF['Tweets'][i])
    print()
    j = j+1


plt.figure(figsize=(8,6))
for i in range(0, df.shape[0]):
  plt.scatter(df['Polarity'][i], df['Subjectivity'][i], color='Red')
plt.title('Sentiment Analysis')
plt.xlabel('Polarity')
plt.ylabel('Subjectivity')
plt.show()


ptweets = df[df.Analysis == 'Positive']
ptweets = ptweets['Tweets']
round(  (ptweets.shape[0] / df.shape[0]) *100 , 1)


ntweets = df[df.Analysis == 'Negative']
ntweets = ntweets['Tweets']
round(   (ntweets.shape[0] / df.shape[0] *100), 1)



